{"ast":null,"code":"import { MENU } from '../main/';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@profabric/angular-components\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"dropdown\"];\nfunction SidebarSearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" No Element found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SidebarSearchComponent_div_10_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function SidebarSearchComponent_div_10_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.handleMenuItemClick());\n    });\n    i0.ɵɵelement(1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"div\", 16);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const menuItem_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"routerLink\", menuItem_r4.path);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r3.boldString(menuItem_r4.name, ctx_r3.searchText), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuItem_r4.name);\n  }\n}\nfunction SidebarSearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, SidebarSearchComponent_div_10_a_1_Template, 4, 3, \"a\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.foundMenuItems);\n  }\n}\nconst _c1 = function (a1, a2) {\n  return {\n    fas: true,\n    \"fa-search\": a1,\n    \"fa-times\": a2,\n    \"fa-fw\": true\n  };\n};\nexport class SidebarSearchComponent {\n  constructor() {\n    this.searchText = '';\n    this.foundMenuItems = [];\n  }\n  ngOnInit() {}\n  handleSearchTextChange(event) {\n    this.foundMenuItems = [];\n    if (event.target.value) {\n      this.searchText = event.target.value;\n      this.findMenuItems(MENU);\n      return;\n    } else {\n      this.searchText = '';\n      this.dropdown.isOpen = false;\n    }\n  }\n  handleIconClick() {\n    this.searchText = '';\n    this.dropdown.isOpen = false;\n  }\n  handleMenuItemClick() {\n    this.searchText = '';\n    this.dropdown.isOpen = false;\n  }\n  findMenuItems(menu) {\n    if (!this.searchText) {\n      return;\n    }\n    menu.forEach(menuItem => {\n      if (menuItem.path && menuItem.name.toLowerCase().includes(this.searchText.toLowerCase())) {\n        this.foundMenuItems.push(menuItem);\n      }\n      if (menuItem.children) {\n        return this.findMenuItems(menuItem.children);\n      }\n    });\n    if (this.foundMenuItems.length > 0) {\n      this.dropdown.isOpen = true;\n    }\n  }\n  boldString(str, substr) {\n    return str.replaceAll(this.capitalizeFirstLetter(substr), `<strong class=\"text-light\">${this.capitalizeFirstLetter(substr)}</strong>`);\n  }\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  static #_ = this.ɵfac = function SidebarSearchComponent_Factory(t) {\n    return new (t || SidebarSearchComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidebarSearchComponent,\n    selectors: [[\"app-sidebar-search\"]],\n    viewQuery: function SidebarSearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 8,\n    consts: [[\"hide-arrow\", \"\", 3, \"openOnButtonClick\"], [\"dropdown\", \"\"], [\"slot\", \"button\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Search\", \"aria-label\", \"Search\", 1, \"form-control\", \"form-control-sidebar\", 3, \"value\", \"input\"], [1, \"input-group-append\"], [1, \"btn\", \"btn-sidebar\", 3, \"click\"], [3, \"ngClass\"], [\"slot\", \"menu\", 1, \"menu\"], [\"class\", \"nothing-found\", 4, \"ngIf\"], [\"class\", \"list-group\", 4, \"ngIf\"], [1, \"nothing-found\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"routerLink\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"routerLink\", \"click\"], [1, \"search-title\", 3, \"innerHTML\"], [1, \"search-path\"]],\n    template: function SidebarSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"pf-dropdown\", 0, 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function SidebarSearchComponent_Template_input_input_4_listener($event) {\n          return ctx.handleSearchTextChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function SidebarSearchComponent_Template_button_click_6_listener() {\n          return ctx.handleIconClick();\n        });\n        i0.ɵɵelement(7, \"i\", 7);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵtemplate(9, SidebarSearchComponent_div_9_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(10, SidebarSearchComponent_div_10_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"openOnButtonClick\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.searchText);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c1, ctx.searchText.length === 0, ctx.searchText.length > 0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundMenuItems.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundMenuItems.length > 0);\n      }\n    },\n    dependencies: [i1.PfDropdown, i2.NgClass, i2.NgForOf, i2.NgIf, i3.RouterLink],\n    styles: [\"[_nghost-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\npf-dropdown[_ngcontent-%COMP%] {\\n  --pf-dropdown-width: 100%;\\n  --pf-dropdown-border: none;\\n  --pf-dropdown-menu-min-width: 100%;\\n  --pf-dropdown-menu-margin-top: 0px;\\n}\\npf-dropdown[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%] {\\n  background-color: #454d55;\\n}\\npf-dropdown[_ngcontent-%COMP%]   .dropdown-item[_ngcontent-%COMP%] {\\n  padding: 0.5rem 1rem;\\n}\\n\\n.nothing-found[_ngcontent-%COMP%] {\\n  color: #c2c7d0;\\n  padding: 0.25rem 0.5rem;\\n}\\n\\n.list-group[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%] {\\n  padding: 0.5rem 0.75rem;\\n  cursor: pointer;\\n}\\n.list-group[_ngcontent-%COMP%]   .search-path[_ngcontent-%COMP%] {\\n  font-size: 80%;\\n  color: #adb5bd;\\n}\\n/*# sourceURL=webpack://./src/app/menu/sidebar-search/sidebar-search.component.scss */\\n/*# sourceURL=webpack://./../../../Project%20Square/Template/project_square/src/app/menu/sidebar-search/sidebar-search.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVudS9zaWRlYmFyLXNlYXJjaC9zaWRlYmFyLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uL1Byb2plY3QlMjBTcXVhcmUvVGVtcGxhdGUvcHJvamVjdF9zcXVhcmUvc3JjL2FwcC9tZW51L3NpZGViYXItc2VhcmNoL3NpZGViYXItc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsMEJBQUE7RUFDQSxrQ0FBQTtFQUNBLGtDQUFBO0FDQ0o7QURDSTtFQUNJLHlCQUFBO0FDQ1I7QURFSTtFQUNJLG9CQUFBO0FDQVI7O0FESUE7RUFDSSxjQUFBO0VBQ0EsdUJBQUE7QUNESjs7QURLSTtFQUNJLHVCQUFBO0VBQ0EsZUFBQTtBQ0ZSO0FES0k7RUFDSSxjQUFBO0VBQ0EsY0FBQTtBQ0hSIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxucGYtZHJvcGRvd24ge1xuICAtLXBmLWRyb3Bkb3duLXdpZHRoOiAxMDAlO1xuICAtLXBmLWRyb3Bkb3duLWJvcmRlcjogbm9uZTtcbiAgLS1wZi1kcm9wZG93bi1tZW51LW1pbi13aWR0aDogMTAwJTtcbiAgLS1wZi1kcm9wZG93bi1tZW51LW1hcmdpbi10b3A6IDBweDtcbn1cbnBmLWRyb3Bkb3duIC5tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NGQ1NTtcbn1cbnBmLWRyb3Bkb3duIC5kcm9wZG93bi1pdGVtIHtcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XG59XG5cbi5ub3RoaW5nLWZvdW5kIHtcbiAgY29sb3I6ICNjMmM3ZDA7XG4gIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xufVxuXG4ubGlzdC1ncm91cCAubGlzdC1ncm91cC1pdGVtIHtcbiAgcGFkZGluZzogMC41cmVtIDAuNzVyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5saXN0LWdyb3VwIC5zZWFyY2gtcGF0aCB7XG4gIGZvbnQtc2l6ZTogODAlO1xuICBjb2xvcjogI2FkYjViZDtcbn0iLCI6aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5wZi1kcm9wZG93biB7XG4gIC0tcGYtZHJvcGRvd24td2lkdGg6IDEwMCU7XG4gIC0tcGYtZHJvcGRvd24tYm9yZGVyOiBub25lO1xuICAtLXBmLWRyb3Bkb3duLW1lbnUtbWluLXdpZHRoOiAxMDAlO1xuICAtLXBmLWRyb3Bkb3duLW1lbnUtbWFyZ2luLXRvcDogMHB4O1xufVxucGYtZHJvcGRvd24gLm1lbnUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU0ZDU1O1xufVxucGYtZHJvcGRvd24gLmRyb3Bkb3duLWl0ZW0ge1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbn1cblxuLm5vdGhpbmctZm91bmQge1xuICBjb2xvcjogI2MyYzdkMDtcbiAgcGFkZGluZzogMC4yNXJlbSAwLjVyZW07XG59XG5cbi5saXN0LWdyb3VwIC5saXN0LWdyb3VwLWl0ZW0ge1xuICBwYWRkaW5nOiAwLjVyZW0gMC43NXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmxpc3QtZ3JvdXAgLnNlYXJjaC1wYXRoIHtcbiAgZm9udC1zaXplOiA4MCU7XG4gIGNvbG9yOiAjYWRiNWJkO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["MENU","i0","SidebarSearchComponent","constructor","ngOnInit","handleSearchTextChange","event","foundMenuItems","target","value","searchText","findMenuItems","dropdown","isOpen","handleIconClick","handleMenuItemClick","menu","forEach","menuItem","path","name","toLowerCase","includes","push","children","length","boldString","str","substr","replaceAll","capitalizeFirstLetter","string","charAt","toUpperCase","slice","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\menu\\sidebar-search\\sidebar-search.component.ts","F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\menu\\sidebar-search\\sidebar-search.component.html"],"sourcesContent":["import {\n    Component,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport {MENU} from '../main/';\nimport {PfDropdown} from '@profabric/angular-components';\n\n@Component({\n    selector: 'app-sidebar-search',\n    templateUrl: './sidebar-search.component.html',\n    styleUrls: ['./sidebar-search.component.scss']\n})\nexport class SidebarSearchComponent implements OnInit {\n    public searchText: string = '';\n    public foundMenuItems = [];\n    @ViewChild('dropdown') dropdown: PfDropdown;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    handleSearchTextChange(event) {\n        this.foundMenuItems = [];\n\n        if (event.target.value) {\n            this.searchText = event.target.value;\n            this.findMenuItems(MENU);\n            return;\n        } else {\n            this.searchText = '';\n            this.dropdown.isOpen = false;\n        }\n    }\n\n    handleIconClick() {\n        this.searchText = '';\n        this.dropdown.isOpen = false;\n    }\n\n    handleMenuItemClick() {\n        this.searchText = '';\n        this.dropdown.isOpen = false;\n    }\n\n    findMenuItems(menu) {\n        if (!this.searchText) {\n            return;\n        }\n\n        menu.forEach((menuItem) => {\n            if (\n                menuItem.path &&\n                menuItem.name\n                    .toLowerCase()\n                    .includes(this.searchText.toLowerCase())\n            ) {\n                this.foundMenuItems.push(menuItem);\n            }\n            if (menuItem.children) {\n                return this.findMenuItems(menuItem.children);\n            }\n        });\n\n        if (this.foundMenuItems.length > 0) {\n            this.dropdown.isOpen = true;\n        }\n    }\n\n    boldString(str, substr) {\n        return str.replaceAll(\n            this.capitalizeFirstLetter(substr),\n            `<strong class=\"text-light\">${this.capitalizeFirstLetter(\n                substr\n            )}</strong>`\n        );\n    }\n\n    capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}\n","<pf-dropdown #dropdown hide-arrow [openOnButtonClick]=\"false\">\n    <div slot=\"button\">\n        <div class=\"input-group\">\n            <input\n                class=\"form-control form-control-sidebar\"\n                type=\"text\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                [value]=\"searchText\"\n                (input)=\"handleSearchTextChange($event)\"\n            />\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-sidebar\" (click)=\"handleIconClick()\">\n                    <i\n                        [ngClass]=\"{\n                            fas: true,\n                            'fa-search': searchText.length === 0,\n                            'fa-times': searchText.length > 0,\n                            'fa-fw': true\n                        }\"\n                    ></i>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class=\"menu\" slot=\"menu\">\n        <div *ngIf=\"foundMenuItems.length === 0\" class=\"nothing-found\">\n            No Element found\n        </div>\n\n        <div *ngIf=\"foundMenuItems.length > 0\" class=\"list-group\">\n            <a\n                [routerLink]=\"menuItem.path\"\n                *ngFor=\"let menuItem of foundMenuItems\"\n                class=\"list-group-item\"\n                (click)=\"handleMenuItemClick()\"\n            >\n                <div\n                    class=\"search-title\"\n                    [innerHTML]=\"boldString(menuItem.name, searchText)\"\n                ></div>\n                <div class=\"search-path\">{{ menuItem.name }}</div>\n            </a>\n        </div>\n    </div>\n</pf-dropdown>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}