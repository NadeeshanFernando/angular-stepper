{"ast":null,"code":"import _asyncToGenerator from \"F:/Projects/Project Square/Template/adminlte-3-angular-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Gatekeeper } from 'gatekeeper-client-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common/http\";\nexport class AppService {\n  constructor(router, toastr, http) {\n    this.router = router;\n    this.toastr = toastr;\n    this.http = http;\n    this.user = null;\n    this.baseUrl = 'https://reqres.in/api/login';\n  }\n  loginByAuth({\n    email,\n    password\n  }) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      alert();\n      try {\n        var toke;\n        // const token = await Gatekeeper.loginByAuth(email, password);\n        toke = _this.http.post(`${_this.baseUrl}`, email, password);\n        localStorage.setItem('token', toke);\n        // await this.getProfile();\n        _this.router.navigate(['/']);\n        _this.toastr.success('Login success');\n      } catch (error) {\n        _this.toastr.error(error.message);\n      }\n    })();\n  }\n  registerByAuth({\n    email,\n    password\n  }) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.registerByAuth(email, password);\n        localStorage.setItem('token', token);\n        yield _this2.getProfile();\n        _this2.router.navigate(['/']);\n        _this2.toastr.success('Register success');\n      } catch (error) {\n        _this2.toastr.error(error.message);\n      }\n    })();\n  }\n  loginByGoogle() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.loginByGoogle();\n        localStorage.setItem('token', token);\n        yield _this3.getProfile();\n        _this3.router.navigate(['/']);\n        _this3.toastr.success('Login success');\n      } catch (error) {\n        _this3.toastr.error(error.message);\n      }\n    })();\n  }\n  registerByGoogle() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.registerByGoogle();\n        localStorage.setItem('token', token);\n        yield _this4.getProfile();\n        _this4.router.navigate(['/']);\n        _this4.toastr.success('Register success');\n      } catch (error) {\n        _this4.toastr.error(error.message);\n      }\n    })();\n  }\n  loginByFacebook() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.loginByFacebook();\n        localStorage.setItem('token', token);\n        yield _this5.getProfile();\n        _this5.router.navigate(['/']);\n        _this5.toastr.success('Login success');\n      } catch (error) {\n        _this5.toastr.error(error.message);\n      }\n    })();\n  }\n  registerByFacebook() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.registerByFacebook();\n        localStorage.setItem('token', token);\n        yield _this6.getProfile();\n        _this6.router.navigate(['/']);\n        _this6.toastr.success('Register success');\n      } catch (error) {\n        _this6.toastr.error(error.message);\n      }\n    })();\n  }\n  getProfile() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this7.user = yield Gatekeeper.getProfile();\n      } catch (error) {\n        _this7.logout();\n        throw error;\n      }\n    })();\n  }\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('gatekeeper_token');\n    this.user = null;\n    this.router.navigate(['/login']);\n  }\n  static #_ = this.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAGA,SAAQA,UAAU,QAAO,uBAAuB;;;;;AAMhD,OAAM,MAAOC,UAAU;EAInBC,YAAoBC,MAAc,EAAUC,MAAqB,EAAUC,IAAgB;IAAvE,WAAM,GAANF,MAAM;IAAkB,WAAM,GAANC,MAAM;IAAyB,SAAI,GAAJC,IAAI;IAHxE,SAAI,GAAQ,IAAI;IACf,YAAO,GAAG,6BAA6B;EAE+C;EAExFC,WAAW,CAAC;IAACC,KAAK;IAAEC;EAAQ,CAAC;IAAA;IAAA;MAC/BC,KAAK,EAAE;MACP,IAAI;QACA,IAAIC,IAAS;QACb;QACAA,IAAI,GAAG,KAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,KAAI,CAACC,OAAO,EAAE,EAAEL,KAAK,EAAEC,QAAQ,CAAC;QACzDK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAAC;QACnC;QACA,KAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,KAAI,CAACX,MAAM,CAACY,OAAO,CAAC,eAAe,CAAC;OACvC,CAAC,OAAOC,KAAK,EAAE;QACZ,KAAI,CAACb,MAAM,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMC,cAAc,CAAC;IAACZ,KAAK;IAAEC;EAAQ,CAAC;IAAA;IAAA;MAClC,IAAI;QACA,MAAMY,KAAK,SAASpB,UAAU,CAACmB,cAAc,CAACZ,KAAK,EAAEC,QAAQ,CAAC;QAC9DK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEM,KAAK,CAAC;QACpC,MAAM,MAAI,CAACC,UAAU,EAAE;QACvB,MAAI,CAAClB,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAI,CAACX,MAAM,CAACY,OAAO,CAAC,kBAAkB,CAAC;OAC1C,CAAC,OAAOC,KAAK,EAAE;QACZ,MAAI,CAACb,MAAM,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMI,aAAa;IAAA;IAAA;MACf,IAAI;QACA,MAAMF,KAAK,SAASpB,UAAU,CAACsB,aAAa,EAAE;QAC9CT,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEM,KAAK,CAAC;QACpC,MAAM,MAAI,CAACC,UAAU,EAAE;QACvB,MAAI,CAAClB,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAI,CAACX,MAAM,CAACY,OAAO,CAAC,eAAe,CAAC;OACvC,CAAC,OAAOC,KAAK,EAAE;QACZ,MAAI,CAACb,MAAM,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMK,gBAAgB;IAAA;IAAA;MAClB,IAAI;QACA,MAAMH,KAAK,SAASpB,UAAU,CAACuB,gBAAgB,EAAE;QACjDV,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEM,KAAK,CAAC;QACpC,MAAM,MAAI,CAACC,UAAU,EAAE;QACvB,MAAI,CAAClB,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAI,CAACX,MAAM,CAACY,OAAO,CAAC,kBAAkB,CAAC;OAC1C,CAAC,OAAOC,KAAK,EAAE;QACZ,MAAI,CAACb,MAAM,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMM,eAAe;IAAA;IAAA;MACjB,IAAI;QACA,MAAMJ,KAAK,SAASpB,UAAU,CAACwB,eAAe,EAAE;QAChDX,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEM,KAAK,CAAC;QACpC,MAAM,MAAI,CAACC,UAAU,EAAE;QACvB,MAAI,CAAClB,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAI,CAACX,MAAM,CAACY,OAAO,CAAC,eAAe,CAAC;OACvC,CAAC,OAAOC,KAAK,EAAE;QACZ,MAAI,CAACb,MAAM,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMO,kBAAkB;IAAA;IAAA;MACpB,IAAI;QACA,MAAML,KAAK,SAASpB,UAAU,CAACyB,kBAAkB,EAAE;QACnDZ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEM,KAAK,CAAC;QACpC,MAAM,MAAI,CAACC,UAAU,EAAE;QACvB,MAAI,CAAClB,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAI,CAACX,MAAM,CAACY,OAAO,CAAC,kBAAkB,CAAC;OAC1C,CAAC,OAAOC,KAAK,EAAE;QACZ,MAAI,CAACb,MAAM,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMG,UAAU;IAAA;IAAA;MACZ,IAAI;QACA,MAAI,CAACK,IAAI,SAAS1B,UAAU,CAACqB,UAAU,EAAE;OAC5C,CAAC,OAAOJ,KAAK,EAAE;QACZ,MAAI,CAACU,MAAM,EAAE;QACb,MAAMV,KAAK;;IACd;EACL;EAEAU,MAAM;IACFd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCf,YAAY,CAACe,UAAU,CAAC,kBAAkB,CAAC;IAC3C,IAAI,CAACF,IAAI,GAAG,IAAI;IAChB,IAAI,CAACvB,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EACpC;EAAC;qBA/FQd,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAA4B,SAAV5B,UAAU;IAAA6B,YAFP;EAAM","names":["Gatekeeper","AppService","constructor","router","toastr","http","loginByAuth","email","password","alert","toke","post","baseUrl","localStorage","setItem","navigate","success","error","message","registerByAuth","token","getProfile","loginByGoogle","registerByGoogle","loginByFacebook","registerByFacebook","user","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\adminlte-3-angular-main\\src\\app\\services\\app.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppService {\n    public user: any = null;\n    private baseUrl = 'https://reqres.in/api/login';\n\n    constructor(private router: Router, private toastr: ToastrService, private http: HttpClient) {}\n\n    async loginByAuth({email, password}) {\n        alert()\n        try {\n            var toke: any;\n            // const token = await Gatekeeper.loginByAuth(email, password);\n            toke = this.http.post(`${this.baseUrl}`, email, password);\n            localStorage.setItem('token', toke);\n            // await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Login success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async registerByAuth({email, password}) {\n        try {\n            const token = await Gatekeeper.registerByAuth(email, password);\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Register success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async loginByGoogle() {\n        try {\n            const token = await Gatekeeper.loginByGoogle();\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Login success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async registerByGoogle() {\n        try {\n            const token = await Gatekeeper.registerByGoogle();\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Register success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async loginByFacebook() {\n        try {\n            const token = await Gatekeeper.loginByFacebook();\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Login success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async registerByFacebook() {\n        try {\n            const token = await Gatekeeper.registerByFacebook();\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Register success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async getProfile() {\n        try {\n            this.user = await Gatekeeper.getProfile();\n        } catch (error) {\n            this.logout();\n            throw error;\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('gatekeeper_token');\n        this.user = null;\n        this.router.navigate(['/login']);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}