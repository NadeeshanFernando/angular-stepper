{"ast":null,"code":"export class GenericValidator {}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,gBAAgB","names":["GenericValidator"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\validation\\generic-validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\nexport class GenericValidator {\n\n    // static epf_no(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     // Check if the field is empty\n    //     if (!value) {\n    //         return { requireEpfNo: true }; // Required validator will handle empty fields\n    //     }\n    //     // Check if the field contains only alphanumeric characters\n    //     const pattern = /^[A-Za-z0-9]*$/;\n    //     if (!pattern.test(value)) {\n    //         return { invalidEpfNo: true }; // Return custom error for invalid format\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static company(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireCompany: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static branch(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireBranch: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static department(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireDepartment: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static designation(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireDesignation: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static grade(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireGrade: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static date_of_joining(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireDateOfJoining: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static hod_name(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireHodName: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n\n    // static epf_no_of_hod(control: AbstractControl): ValidationErrors | null {\n    //     const value = control.value;\n    //     if (!value) {\n    //         return { requireEpfNoOfHod: true }; // Required validator will handle empty fields\n    //     }\n    //     return null; // Field is valid\n    // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}