{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AppService = class AppService {\n  constructor(router, toastr, http) {\n    this.router = router;\n    this.toastr = toastr;\n    this.http = http;\n    this.user = null;\n  }\n  login(authData) {\n    return this.http.post(`${this.baseUrl}/login`, authData);\n  }\n};\nAppService = __decorate([Injectable({\n  providedIn: 'root'\n})], AppService);\nexport { AppService };","map":{"version":3,"mappings":";AAAA,SAAQA,UAAU,QAAO,eAAe;AASjC,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EAGnBC,YAAoBC,MAAc,EAAUC,MAAqB,EAAUC,IAAgB;IAAvE,WAAM,GAANF,MAAM;IAAkB,WAAM,GAANC,MAAM;IAAyB,SAAI,GAAJC,IAAI;IAFxE,SAAI,GAAQ,IAAI;EAEwE;EAE/FC,KAAK,CAACC,QAAa;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAEF,QAAQ,CAAC;EAC1D;CAyFL;AAhGYN,UAAU,eAHtBD,UAAU,CAAC;EACRU,UAAU,EAAE;CACf,CAAC,GACWT,UAAU,CAgGtB;SAhGYA,UAAU","names":["Injectable","AppService","constructor","router","toastr","http","login","authData","post","baseUrl","providedIn"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\adminlte-3-angular-main\\src\\app\\services\\app.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppService {\n    public user: any = null;\n\n    constructor(private router: Router, private toastr: ToastrService, private http: HttpClient,) {}\n\n    login(authData: any ): Observable<any>{\n        return this.http.post(`${this.baseUrl}/login`, authData);\n      }\n\n    // async loginByAuth({email, password}) {\n    //     try {\n    //         const token = await Gatekeeper.loginByAuth(email, password);\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async registerByAuth({email, password}) {\n    //     try {\n    //         const token = await Gatekeeper.registerByAuth(email, password);\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Register success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async loginByGoogle() {\n    //     try {\n    //         const token = await Gatekeeper.loginByGoogle();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async registerByGoogle() {\n    //     try {\n    //         const token = await Gatekeeper.registerByGoogle();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Register success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async loginByFacebook() {\n    //     try {\n    //         const token = await Gatekeeper.loginByFacebook();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async registerByFacebook() {\n    //     try {\n    //         const token = await Gatekeeper.registerByFacebook();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Register success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async getProfile() {\n    //     try {\n    //         this.user = await Gatekeeper.getProfile();\n    //     } catch (error) {\n    //         this.logout();\n    //         throw error;\n    //     }\n    // }\n\n    // logout() {\n    //     localStorage.removeItem('token');\n    //     localStorage.removeItem('gatekeeper_token');\n    //     this.user = null;\n    //     this.router.navigate(['/login']);\n    // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}