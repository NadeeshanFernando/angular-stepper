{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostBinding, Input } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { openCloseAnimation, rotateAnimation } from './menu-item.animations';\nlet MenuItemComponent = class MenuItemComponent {\n  constructor(router) {\n    this.router = router;\n    this.menuItem = null;\n    this.isExpandable = false;\n    this.isNavItem = true;\n    this.isMenuExtended = false;\n    this.isMainActive = false;\n    this.isOneOfChildrenActive = false;\n  }\n  ngOnInit() {\n    if (this.menuItem && this.menuItem.children && this.menuItem.children.length > 0) {\n      this.isExpandable = true;\n    }\n    this.calculateIsActive(this.router.url);\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      this.calculateIsActive(event.url);\n    });\n  }\n  handleMainMenuAction() {\n    if (this.isExpandable) {\n      this.toggleMenu();\n      return;\n    }\n    this.router.navigate(this.menuItem.path);\n  }\n  toggleMenu() {\n    this.isMenuExtended = !this.isMenuExtended;\n  }\n  calculateIsActive(url) {\n    this.isMainActive = false;\n    this.isOneOfChildrenActive = false;\n    if (this.isExpandable) {\n      this.menuItem.children.forEach(item => {\n        if (item.path[0] === url) {\n          this.isOneOfChildrenActive = true;\n          this.isMenuExtended = true;\n        }\n      });\n    } else if (this.menuItem.path[0] === url) {\n      this.isMainActive = true;\n    }\n    if (!this.isMainActive && !this.isOneOfChildrenActive) {\n      this.isMenuExtended = false;\n    }\n  }\n};\n__decorate([Input()], MenuItemComponent.prototype, \"menuItem\", void 0);\n__decorate([HostBinding('class.nav-item')], MenuItemComponent.prototype, \"isNavItem\", void 0);\n__decorate([HostBinding('class.menu-open')], MenuItemComponent.prototype, \"isMenuExtended\", void 0);\nMenuItemComponent = __decorate([Component({\n  selector: 'app-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss'],\n  animations: [openCloseAnimation, rotateAnimation]\n})], MenuItemComponent);\nexport { MenuItemComponent };","map":{"version":3,"mappings":";AAAA,SAAQA,SAAS,EAAEC,WAAW,EAAEC,KAAK,QAAe,eAAe;AACnE,SAAQC,aAAa,QAAe,iBAAiB;AACrD,SAAQC,MAAM,QAAO,gBAAgB;AACrC,SAAQC,kBAAkB,EAAEC,eAAe,QAAO,wBAAwB;AAQnE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAQ1BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAPjB,aAAQ,GAAQ,IAAI;IACtB,iBAAY,GAAY,KAAK;IACL,cAAS,GAAY,IAAI;IACxB,mBAAc,GAAY,KAAK;IACxD,iBAAY,GAAY,KAAK;IAC7B,0BAAqB,GAAY,KAAK;EAER;EAErCC,QAAQ;IACJ,IACI,IAAI,CAACC,QAAQ,IACb,IAAI,CAACA,QAAQ,CAACC,QAAQ,IACtB,IAAI,CAACD,QAAQ,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC,EACnC;MACE,IAAI,CAACC,YAAY,GAAG,IAAI;;IAE5B,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACN,MAAM,CAACO,GAAG,CAAC;IACvC,IAAI,CAACP,MAAM,CAACQ,MAAM,CACbC,IAAI,CAACd,MAAM,CAAEe,KAAK,IAAKA,KAAK,YAAYhB,aAAa,CAAC,CAAC,CACvDiB,SAAS,CAAED,KAAoB,IAAI;MAChC,IAAI,CAACJ,iBAAiB,CAACI,KAAK,CAACH,GAAG,CAAC;IACrC,CAAC,CAAC;EACV;EAEOK,oBAAoB;IACvB,IAAI,IAAI,CAACP,YAAY,EAAE;MACnB,IAAI,CAACQ,UAAU,EAAE;MACjB;;IAEJ,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAAC;EAC5C;EAEOF,UAAU;IACb,IAAI,CAACG,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC9C;EAEOV,iBAAiB,CAACC,GAAW;IAChC,IAAI,CAACU,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,qBAAqB,GAAG,KAAK;IAClC,IAAI,IAAI,CAACb,YAAY,EAAE;MACnB,IAAI,CAACH,QAAQ,CAACC,QAAQ,CAACgB,OAAO,CAAEC,IAAI,IAAI;QACpC,IAAIA,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC,KAAKR,GAAG,EAAE;UACtB,IAAI,CAACW,qBAAqB,GAAG,IAAI;UACjC,IAAI,CAACF,cAAc,GAAG,IAAI;;MAElC,CAAC,CAAC;KACL,MAAM,IAAI,IAAI,CAACd,QAAQ,CAACa,IAAI,CAAC,CAAC,CAAC,KAAKR,GAAG,EAAE;MACtC,IAAI,CAACU,YAAY,GAAG,IAAI;;IAE5B,IAAI,CAAC,IAAI,CAACA,YAAY,IAAI,CAAC,IAAI,CAACC,qBAAqB,EAAE;MACnD,IAAI,CAACF,cAAc,GAAG,KAAK;;EAEnC;CACH;AAtDYK,YAAR5B,KAAK,EAAE,mDAAsB;AAEC4B,YAA9B7B,WAAW,CAAC,gBAAgB,CAAC,oDAA2B;AACzB6B,YAA/B7B,WAAW,CAAC,iBAAiB,CAAC,yDAAiC;AAJvDM,iBAAiB,eAN7BP,SAAS,CAAC;EACP+B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B,CAAC;EACzCC,UAAU,EAAE,CAAC7B,kBAAkB,EAAEC,eAAe;CACnD,CAAC,GACWC,iBAAiB,CAuD7B;SAvDYA,iBAAiB","names":["Component","HostBinding","Input","NavigationEnd","filter","openCloseAnimation","rotateAnimation","MenuItemComponent","constructor","router","ngOnInit","menuItem","children","length","isExpandable","calculateIsActive","url","events","pipe","event","subscribe","handleMainMenuAction","toggleMenu","navigate","path","isMenuExtended","isMainActive","isOneOfChildrenActive","forEach","item","__decorate","selector","templateUrl","styleUrls","animations"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\adminlte-3-angular-main\\src\\app\\components\\menu-item\\menu-item.component.ts"],"sourcesContent":["import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {filter} from 'rxjs/operators';\nimport {openCloseAnimation, rotateAnimation} from './menu-item.animations';\n\n@Component({\n    selector: 'app-menu-item',\n    templateUrl: './menu-item.component.html',\n    styleUrls: ['./menu-item.component.scss'],\n    animations: [openCloseAnimation, rotateAnimation]\n})\nexport class MenuItemComponent implements OnInit {\n    @Input() menuItem: any = null;\n    public isExpandable: boolean = false;\n    @HostBinding('class.nav-item') isNavItem: boolean = true;\n    @HostBinding('class.menu-open') isMenuExtended: boolean = false;\n    public isMainActive: boolean = false;\n    public isOneOfChildrenActive: boolean = false;\n\n    constructor(private router: Router) {}\n\n    ngOnInit(): void {\n        if (\n            this.menuItem &&\n            this.menuItem.children &&\n            this.menuItem.children.length > 0\n        ) {\n            this.isExpandable = true;\n        }\n        this.calculateIsActive(this.router.url);\n        this.router.events\n            .pipe(filter((event) => event instanceof NavigationEnd))\n            .subscribe((event: NavigationEnd) => {\n                this.calculateIsActive(event.url);\n            });\n    }\n\n    public handleMainMenuAction() {\n        if (this.isExpandable) {\n            this.toggleMenu();\n            return;\n        }\n        this.router.navigate(this.menuItem.path);\n    }\n\n    public toggleMenu() {\n        this.isMenuExtended = !this.isMenuExtended;\n    }\n\n    public calculateIsActive(url: string) {\n        this.isMainActive = false;\n        this.isOneOfChildrenActive = false;\n        if (this.isExpandable) {\n            this.menuItem.children.forEach((item) => {\n                if (item.path[0] === url) {\n                    this.isOneOfChildrenActive = true;\n                    this.isMenuExtended = true;\n                }\n            });\n        } else if (this.menuItem.path[0] === url) {\n            this.isMainActive = true;\n        }\n        if (!this.isMainActive && !this.isOneOfChildrenActive) {\n            this.isMenuExtended = false;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}