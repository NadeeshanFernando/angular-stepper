{"ast":null,"code":"export class GenericValidator {\n  static epf_no(control) {\n    const value = control.value;\n    // Check if the field is empty\n    if (!value) {\n      return {\n        requireEpfNo: true\n      }; // Required validator will handle empty fields\n    }\n    // Check if the field contains only alphanumeric characters\n    const pattern = /^[A-Za-z0-9]*$/;\n    if (!pattern.test(value)) {\n      return {\n        invalidEpfNo: true\n      }; // Return custom error for invalid format\n    }\n\n    return null; // Field is valid\n  }\n\n  static epf_no(control) {\n    const value = control.value;\n    // Check if the field is empty\n    if (!value) {\n      return {\n        requireEpfNo: true\n      }; // Required validator will handle empty fields\n    }\n    // Check if the field contains only alphanumeric characters\n    const pattern = /^[A-Za-z0-9]*$/;\n    if (!pattern.test(value)) {\n      return {\n        invalidEpfNo: true\n      }; // Return custom error for invalid format\n    }\n\n    return null; // Field is valid\n  }\n\n  static epf_no(control) {\n    const value = control.value;\n    // Check if the field is empty\n    if (!value) {\n      return {\n        requireEpfNo: true\n      }; // Required validator will handle empty fields\n    }\n    // Check if the field contains only alphanumeric characters\n    const pattern = /^[A-Za-z0-9]*$/;\n    if (!pattern.test(value)) {\n      return {\n        invalidEpfNo: true\n      }; // Return custom error for invalid format\n    }\n\n    return null; // Field is valid\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,gBAAgB;EAEzB,OAAOC,MAAM,CAACC,OAAwB;IAClC,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B;IACA,IAAI,CAACA,KAAK,EAAE;MACR,OAAO;QAAEC,YAAY,EAAE;MAAI,CAAE,CAAC,CAAC;;IAEnC;IACA,MAAMC,OAAO,GAAG,gBAAgB;IAChC,IAAI,CAACA,OAAO,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MACtB,OAAO;QAAEI,YAAY,EAAE;MAAI,CAAE,CAAC,CAAC;;;IAEnC,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA,OAAON,MAAM,CAACC,OAAwB;IAClC,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B;IACA,IAAI,CAACA,KAAK,EAAE;MACR,OAAO;QAAEC,YAAY,EAAE;MAAI,CAAE,CAAC,CAAC;;IAEnC;IACA,MAAMC,OAAO,GAAG,gBAAgB;IAChC,IAAI,CAACA,OAAO,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MACtB,OAAO;QAAEI,YAAY,EAAE;MAAI,CAAE,CAAC,CAAC;;;IAEnC,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA,OAAON,MAAM,CAACC,OAAwB;IAClC,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B;IACA,IAAI,CAACA,KAAK,EAAE;MACR,OAAO;QAAEC,YAAY,EAAE;MAAI,CAAE,CAAC,CAAC;;IAEnC;IACA,MAAMC,OAAO,GAAG,gBAAgB;IAChC,IAAI,CAACA,OAAO,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MACtB,OAAO;QAAEI,YAAY,EAAE;MAAI,CAAE,CAAC,CAAC;;;IAEnC,OAAO,IAAI,CAAC,CAAC;EACjB","names":["GenericValidator","epf_no","control","value","requireEpfNo","pattern","test","invalidEpfNo"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\validation\\generic-validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\nexport class GenericValidator {\n\n    static epf_no(control: AbstractControl): ValidationErrors | null {\n        const value = control.value;\n        // Check if the field is empty\n        if (!value) {\n            return { requireEpfNo: true }; // Required validator will handle empty fields\n        }\n        // Check if the field contains only alphanumeric characters\n        const pattern = /^[A-Za-z0-9]*$/;\n        if (!pattern.test(value)) {\n            return { invalidEpfNo: true }; // Return custom error for invalid format\n        }\n        return null; // Field is valid\n    }\n\n    static epf_no(control: AbstractControl): ValidationErrors | null {\n        const value = control.value;\n        // Check if the field is empty\n        if (!value) {\n            return { requireEpfNo: true }; // Required validator will handle empty fields\n        }\n        // Check if the field contains only alphanumeric characters\n        const pattern = /^[A-Za-z0-9]*$/;\n        if (!pattern.test(value)) {\n            return { invalidEpfNo: true }; // Return custom error for invalid format\n        }\n        return null; // Field is valid\n    }\n\n    static epf_no(control: AbstractControl): ValidationErrors | null {\n        const value = control.value;\n        // Check if the field is empty\n        if (!value) {\n            return { requireEpfNo: true }; // Required validator will handle empty fields\n        }\n        // Check if the field contains only alphanumeric characters\n        const pattern = /^[A-Za-z0-9]*$/;\n        if (!pattern.test(value)) {\n            return { invalidEpfNo: true }; // Return custom error for invalid format\n        }\n        return null; // Field is valid\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}