{"ast":null,"code":"import _asyncToGenerator from \"F:/Projects/Project Square/Template/adminlte-3-angular-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, HostBinding } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(renderer, toastr, appService) {\n    this.renderer = renderer;\n    this.toastr = toastr;\n    this.appService = appService;\n    this.class = 'login-box';\n    this.isAuthLoading = false;\n    this.isGoogleLoading = false;\n    this.isFacebookLoading = false;\n  }\n  ngOnInit() {\n    this.renderer.addClass(document.querySelector('app-root'), 'login-page');\n    this.loginForm = new UntypedFormGroup({\n      email: new UntypedFormControl(null, Validators.required),\n      password: new UntypedFormControl(null, Validators.required)\n    });\n  }\n  loginByAuth() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.loginForm.valid) {\n        _this.isAuthLoading = true;\n        yield _this.appService.loginByAuth(_this.loginForm.value);\n        _this.isAuthLoading = false;\n      } else {\n        _this.toastr.error('Form is not valid!');\n      }\n    })();\n  }\n  loginByGoogle() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.isGoogleLoading = true;\n      yield _this2.appService.loginByGoogle();\n      _this2.isGoogleLoading = false;\n    })();\n  }\n  loginByFacebook() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.isFacebookLoading = true;\n      yield _this3.appService.loginByFacebook();\n      _this3.isFacebookLoading = false;\n    })();\n  }\n  ngOnDestroy() {\n    this.renderer.removeClass(document.querySelector('app-root'), 'login-page');\n  }\n};\n__decorate([HostBinding('class')], LoginComponent.prototype, \"class\", void 0);\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";;AAAA,SACIA,SAAS,EAITC,WAAW,QACR,eAAe;AACtB,SAAQC,gBAAgB,EAAEC,kBAAkB,EAAEC,UAAU,QAAO,gBAAgB;AAQxE,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOvBC,YACYC,QAAmB,EACnBC,MAAqB,EACrBC,UAAsB;IAFtB,aAAQ,GAARF,QAAQ;IACR,WAAM,GAANC,MAAM;IACN,eAAU,GAAVC,UAAU;IATA,UAAK,GAAG,WAAW;IAElC,kBAAa,GAAG,KAAK;IACrB,oBAAe,GAAG,KAAK;IACvB,sBAAiB,GAAG,KAAK;EAM7B;EAEHC,QAAQ;IACJ,IAAI,CAACH,QAAQ,CAACI,QAAQ,CAClBC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,EAClC,YAAY,CACf;IACD,IAAI,CAACC,SAAS,GAAG,IAAIZ,gBAAgB,CAAC;MAClCa,KAAK,EAAE,IAAIZ,kBAAkB,CAAC,IAAI,EAAEC,UAAU,CAACY,QAAQ,CAAC;MACxDC,QAAQ,EAAE,IAAId,kBAAkB,CAAC,IAAI,EAAEC,UAAU,CAACY,QAAQ;KAC7D,CAAC;EACN;EAEME,WAAW;IAAA;IAAA;MACb,IAAI,KAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;QACtB,KAAI,CAACC,aAAa,GAAG,IAAI;QACzB,MAAM,KAAI,CAACX,UAAU,CAACS,WAAW,CAAC,KAAI,CAACJ,SAAS,CAACO,KAAK,CAAC;QACvD,KAAI,CAACD,aAAa,GAAG,KAAK;OAC7B,MAAM;QACH,KAAI,CAACZ,MAAM,CAACc,KAAK,CAAC,oBAAoB,CAAC;;IAC1C;EACL;EAEMC,aAAa;IAAA;IAAA;MACf,MAAI,CAACC,eAAe,GAAG,IAAI;MAC3B,MAAM,MAAI,CAACf,UAAU,CAACc,aAAa,EAAE;MACrC,MAAI,CAACC,eAAe,GAAG,KAAK;IAAC;EACjC;EAEMC,eAAe;IAAA;IAAA;MACjB,MAAI,CAACC,iBAAiB,GAAG,IAAI;MAC7B,MAAM,MAAI,CAACjB,UAAU,CAACgB,eAAe,EAAE;MACvC,MAAI,CAACC,iBAAiB,GAAG,KAAK;IAAC;EACnC;EAEAC,WAAW;IACP,IAAI,CAACpB,QAAQ,CAACqB,WAAW,CACrBhB,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,EAClC,YAAY,CACf;EACL;CACH;AAnDyBgB,YAArB5B,WAAW,CAAC,OAAO,CAAC,6CAAqB;AADjCI,cAAc,eAL1BL,SAAS,CAAC;EACP8B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACvC,CAAC,GACW3B,cAAc,CAoD1B;SApDYA,cAAc","names":["Component","HostBinding","UntypedFormGroup","UntypedFormControl","Validators","LoginComponent","constructor","renderer","toastr","appService","ngOnInit","addClass","document","querySelector","loginForm","email","required","password","loginByAuth","valid","isAuthLoading","value","error","loginByGoogle","isGoogleLoading","loginByFacebook","isFacebookLoading","ngOnDestroy","removeClass","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\adminlte-3-angular-main\\src\\app\\modules\\login\\login.component.ts"],"sourcesContent":["import {\n    Component,\n    OnInit,\n    OnDestroy,\n    Renderer2,\n    HostBinding\n} from '@angular/core';\nimport {UntypedFormGroup, UntypedFormControl, Validators} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n    @HostBinding('class') class = 'login-box';\n    public loginForm: UntypedFormGroup;\n    public isAuthLoading = false;\n    public isGoogleLoading = false;\n    public isFacebookLoading = false;\n\n    constructor(\n        private renderer: Renderer2,\n        private toastr: ToastrService,\n        private appService: AppService\n    ) {}\n\n    ngOnInit() {\n        this.renderer.addClass(\n            document.querySelector('app-root'),\n            'login-page'\n        );\n        this.loginForm = new UntypedFormGroup({\n            email: new UntypedFormControl(null, Validators.required),\n            password: new UntypedFormControl(null, Validators.required)\n        });\n    }\n\n    async loginByAuth() {\n        if (this.loginForm.valid) {\n            this.isAuthLoading = true;\n            await this.appService.loginByAuth(this.loginForm.value);\n            this.isAuthLoading = false;\n        } else {\n            this.toastr.error('Form is not valid!');\n        }\n    }\n\n    async loginByGoogle() {\n        this.isGoogleLoading = true;\n        await this.appService.loginByGoogle();\n        this.isGoogleLoading = false;\n    }\n\n    async loginByFacebook() {\n        this.isFacebookLoading = true;\n        await this.appService.loginByFacebook();\n        this.isFacebookLoading = false;\n    }\n\n    ngOnDestroy() {\n        this.renderer.removeClass(\n            document.querySelector('app-root'),\n            'login-page'\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}