{"ast":null,"code":"// import {\n//     NAVBAR_DARK_VARIANTS,\n//     NAVBAR_LIGHT_VARIANTS,\n//     SIDEBAR_DARK_SKINS,\n//     SIDEBAR_LIGHT_SKINS\n// } from '@/utils/themes';\n// import * as Actions from './actions';\n// import {UiAction} from './actions';\n// import initialState, {UiState} from './state';\n// export function uiReducer(state: UiState = initialState, action: UiAction) {\n//     switch (action.type) {\n//         case Actions.TOGGLE_SIDEBAR_MENU:\n//             return {\n//                 ...state,\n//                 menuSidebarCollapsed: !state.menuSidebarCollapsed\n//             };\n//         case Actions.TOGGLE_CONTROL_SIDEBAR:\n//             return {\n//                 ...state,\n//                 controlSidebarCollapsed: !state.controlSidebarCollapsed\n//             };\n//         case Actions.TOGGLE_DARK_MODE:\n//             let variant: string;\n//             let skin: string;\n//             if (state.darkMode) {\n//                 variant = NAVBAR_LIGHT_VARIANTS[0].value;\n//                 skin = SIDEBAR_LIGHT_SKINS[0].value;\n//             } else {\n//                 variant = NAVBAR_DARK_VARIANTS[0].value;\n//                 skin = SIDEBAR_DARK_SKINS[0].value;\n//             }\n//             return {\n//                 ...state,\n//                 navbarVariant: variant,\n//                 sidebarSkin: skin,\n//                 darkMode: !state.darkMode\n//             };\n//         case Actions.SET_NAVBAR_VARIANT:\n//             let navbarVariant: string;\n//             if (state.darkMode) {\n//                 navbarVariant = action.payload || NAVBAR_DARK_VARIANTS[0].value;\n//             } else {\n//                 navbarVariant =\n//                     action.payload || NAVBAR_LIGHT_VARIANTS[0].value;\n//             }\n//             return {\n//                 ...state,\n//                 navbarVariant\n//             };\n//         case Actions.SET_SIDEBAR_SKIN:\n//             let sidebarSkin: string;\n//             if (state.darkMode) {\n//                 sidebarSkin = action.payload || SIDEBAR_DARK_SKINS[0].value;\n//             } else {\n//                 sidebarSkin = action.payload || SIDEBAR_LIGHT_SKINS[0].value;\n//             }\n//             return {\n//                 ...state,\n//                 sidebarSkin\n//             };\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\store\\ui\\reducer.ts"],"sourcesContent":["// import {\n//     NAVBAR_DARK_VARIANTS,\n//     NAVBAR_LIGHT_VARIANTS,\n//     SIDEBAR_DARK_SKINS,\n//     SIDEBAR_LIGHT_SKINS\n// } from '@/utils/themes';\n// import * as Actions from './actions';\n// import {UiAction} from './actions';\n// import initialState, {UiState} from './state';\n\n// export function uiReducer(state: UiState = initialState, action: UiAction) {\n//     switch (action.type) {\n//         case Actions.TOGGLE_SIDEBAR_MENU:\n//             return {\n//                 ...state,\n//                 menuSidebarCollapsed: !state.menuSidebarCollapsed\n//             };\n//         case Actions.TOGGLE_CONTROL_SIDEBAR:\n//             return {\n//                 ...state,\n//                 controlSidebarCollapsed: !state.controlSidebarCollapsed\n//             };\n//         case Actions.TOGGLE_DARK_MODE:\n//             let variant: string;\n//             let skin: string;\n//             if (state.darkMode) {\n//                 variant = NAVBAR_LIGHT_VARIANTS[0].value;\n//                 skin = SIDEBAR_LIGHT_SKINS[0].value;\n//             } else {\n//                 variant = NAVBAR_DARK_VARIANTS[0].value;\n//                 skin = SIDEBAR_DARK_SKINS[0].value;\n//             }\n//             return {\n//                 ...state,\n//                 navbarVariant: variant,\n//                 sidebarSkin: skin,\n//                 darkMode: !state.darkMode\n//             };\n//         case Actions.SET_NAVBAR_VARIANT:\n//             let navbarVariant: string;\n//             if (state.darkMode) {\n//                 navbarVariant = action.payload || NAVBAR_DARK_VARIANTS[0].value;\n//             } else {\n//                 navbarVariant =\n//                     action.payload || NAVBAR_LIGHT_VARIANTS[0].value;\n//             }\n//             return {\n//                 ...state,\n//                 navbarVariant\n//             };\n//         case Actions.SET_SIDEBAR_SKIN:\n//             let sidebarSkin: string;\n//             if (state.darkMode) {\n//                 sidebarSkin = action.payload || SIDEBAR_DARK_SKINS[0].value;\n//             } else {\n//                 sidebarSkin = action.payload || SIDEBAR_LIGHT_SKINS[0].value;\n//             }\n//             return {\n//                 ...state,\n//                 sidebarSkin\n//             };\n//         default:\n//             return state;\n//     }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}