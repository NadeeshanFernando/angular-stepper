{"ast":null,"code":"export class GenericValidator {\n  static epf_no(control) {\n    const value = control.value;\n    // alert(value)\n    // Check if the field is empty\n    // if (!value) {\n    //   return { requireEpfNo: true }; // Required validator will handle empty fields\n    // }\n    // // Check if the field contains only alphanumeric characters\n    // const pattern = /^[A-Za-z0-9]*$/;\n    // if (!pattern.test(value)) {\n    //   return { invalidEpfNo: true }; // Return custom error for invalid format\n    // }\n    return null; // Field is valid\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,gBAAgB;EAEzB,OAAOC,MAAM,CAACC,OAAwB;IAClC,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA,OAAO,IAAI,CAAC,CAAC;EACf","names":["GenericValidator","epf_no","control","value"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\validation\\generic-validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\nexport class GenericValidator {\n\n    static epf_no(control: AbstractControl): ValidationErrors | null {\n        const value = control.value;\n        // alert(value)\n    \n        // Check if the field is empty\n        // if (!value) {\n        //   return { requireEpfNo: true }; // Required validator will handle empty fields\n        // }\n    \n        // // Check if the field contains only alphanumeric characters\n        // const pattern = /^[A-Za-z0-9]*$/;\n        // if (!pattern.test(value)) {\n        //   return { invalidEpfNo: true }; // Return custom error for invalid format\n        // }\n    \n        return null; // Field is valid\n      }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}