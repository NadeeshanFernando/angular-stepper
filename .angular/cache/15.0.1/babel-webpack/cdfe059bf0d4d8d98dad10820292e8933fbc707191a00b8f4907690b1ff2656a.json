{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nexport class AppService {\n  constructor(router, toastr) {\n    this.router = router;\n    this.toastr = toastr;\n    this.user = null;\n  }\n  login(authData) {\n    return this.http.post(`${this.baseUrl}/login`, authData);\n  }\n  static #_ = this.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,UAAU;EAGnBC,YAAoBC,MAAc,EAAUC,MAAqB;IAA7C,WAAM,GAAND,MAAM;IAAkB,WAAM,GAANC,MAAM;IAF3C,SAAI,GAAQ,IAAI;EAE6C;EAEpEC,KAAK,CAACC,QAAa;IACf,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAEH,QAAQ,CAAC;EAC1D;EAAC;qBAPML,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAS,SAAVT,UAAU;IAAAU,YAFP;EAAM","names":["AppService","constructor","router","toastr","login","authData","http","post","baseUrl","factory","providedIn"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\adminlte-3-angular-main\\src\\app\\services\\app.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppService {\n    public user: any = null;\n\n    constructor(private router: Router, private toastr: ToastrService) {}\n\n    login(authData: any ): Observable<any>{\n        return this.http.post(`${this.baseUrl}/login`, authData);\n      }\n\n    // async loginByAuth({email, password}) {\n    //     try {\n    //         const token = await Gatekeeper.loginByAuth(email, password);\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async registerByAuth({email, password}) {\n    //     try {\n    //         const token = await Gatekeeper.registerByAuth(email, password);\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Register success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async loginByGoogle() {\n    //     try {\n    //         const token = await Gatekeeper.loginByGoogle();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async registerByGoogle() {\n    //     try {\n    //         const token = await Gatekeeper.registerByGoogle();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Register success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async loginByFacebook() {\n    //     try {\n    //         const token = await Gatekeeper.loginByFacebook();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async registerByFacebook() {\n    //     try {\n    //         const token = await Gatekeeper.registerByFacebook();\n    //         localStorage.setItem('token', token);\n    //         await this.getProfile();\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Register success');\n    //     } catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    // async getProfile() {\n    //     try {\n    //         this.user = await Gatekeeper.getProfile();\n    //     } catch (error) {\n    //         this.logout();\n    //         throw error;\n    //     }\n    // }\n\n    // logout() {\n    //     localStorage.removeItem('token');\n    //     localStorage.removeItem('gatekeeper_token');\n    //     this.user = null;\n    //     this.router.navigate(['/login']);\n    // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}