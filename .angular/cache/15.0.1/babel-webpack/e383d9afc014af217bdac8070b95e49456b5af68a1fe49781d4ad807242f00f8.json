{"ast":null,"code":"import _asyncToGenerator from \"F:/Projects/Project Square/Template/project_square/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Gatekeeper } from 'gatekeeper-client-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common/http\";\nexport class AppService {\n  constructor(router, toastr, http) {\n    this.router = router;\n    this.toastr = toastr;\n    this.http = http;\n    this.user = null;\n    this.baseUrl = 'https://reqres.in/api/login';\n  }\n  loginByAuth({\n    email,\n    password\n  }) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.loginByAuth(email, password);\n        localStorage.setItem('token', token);\n        yield _this.getProfile();\n        _this.router.navigate(['/']);\n        _this.toastr.success('Login success');\n      } catch (error) {\n        _this.toastr.error(error.message);\n      }\n    })();\n  }\n  // async loginByAuth({email, password}){\n  //     alert(\"email: \"+ email)\n  //     // eve.holt@reqres.in\n  //     // cityslicka\n  //     try{\n  //         const response = await this.http.post(`${this.baseUrl}`, { email, password }).toPromise();\n  //         const token = response['token'];\n  //         localStorage.setItem('token', token);\n  //         localStorage.setItem('gatekeeper_token', token);\n  //         this.router.navigate(['/']);\n  //         this.toastr.success('Login success');\n  //     }catch (error) {\n  //         this.toastr.error(error.message);\n  //     }\n  // }\n  registerByAuth({\n    email,\n    password\n  }) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield Gatekeeper.registerByAuth(email, password);\n        localStorage.setItem('token', token);\n        yield _this2.getProfile();\n        _this2.router.navigate(['/']);\n        _this2.toastr.success('Register success');\n      } catch (error) {\n        _this2.toastr.error(error.message);\n      }\n    })();\n  }\n  getProfile() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this3.user = yield Gatekeeper.getProfile();\n      } catch (error) {\n        _this3.logout();\n        throw error;\n      }\n    })();\n  }\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('gatekeeper_token');\n    this.user = null;\n    this.router.navigate(['/login']);\n  }\n  static #_ = this.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAGA,SAAQA,UAAU,QAAO,uBAAuB;;;;;AAOhD,OAAM,MAAOC,UAAU;EAInBC,YAAoBC,MAAc,EAAUC,MAAqB,EAAUC,IAAgB;IAAvE,WAAM,GAANF,MAAM;IAAkB,WAAM,GAANC,MAAM;IAAyB,SAAI,GAAJC,IAAI;IAHxE,SAAI,GAAQ,IAAI;IACf,YAAO,GAAG,6BAA6B;EAE+C;EAExFC,WAAW,CAAC;IAACC,KAAK;IAAEC;EAAQ,CAAC;IAAA;IAAA;MAC/B,IAAI;QACA,MAAMC,KAAK,SAAST,UAAU,CAACM,WAAW,CAACC,KAAK,EAAEC,QAAQ,CAAC;QAC3DE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;QACpC,MAAM,KAAI,CAACG,UAAU,EAAE;QACvB,KAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,KAAI,CAACT,MAAM,CAACU,OAAO,CAAC,eAAe,CAAC;OACvC,CAAC,OAAOC,KAAK,EAAE;QACZ,KAAI,CAACX,MAAM,CAACW,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEMC,cAAc,CAAC;IAACV,KAAK;IAAEC;EAAQ,CAAC;IAAA;IAAA;MAClC,IAAI;QACA,MAAMC,KAAK,SAAST,UAAU,CAACiB,cAAc,CAACV,KAAK,EAAEC,QAAQ,CAAC;QAC9DE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;QACpC,MAAM,MAAI,CAACG,UAAU,EAAE;QACvB,MAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAI,CAACT,MAAM,CAACU,OAAO,CAAC,kBAAkB,CAAC;OAC1C,CAAC,OAAOC,KAAK,EAAE;QACZ,MAAI,CAACX,MAAM,CAACW,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;;IACnC;EACL;EAEMJ,UAAU;IAAA;IAAA;MACZ,IAAI;QACA,MAAI,CAACM,IAAI,SAASlB,UAAU,CAACY,UAAU,EAAE;OAC5C,CAAC,OAAOG,KAAK,EAAE;QACZ,MAAI,CAACI,MAAM,EAAE;QACb,MAAMJ,KAAK;;IACd;EACL;EAEAI,MAAM;IACFT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,kBAAkB,CAAC;IAC3C,IAAI,CAACF,IAAI,GAAG,IAAI;IAChB,IAAI,CAACf,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EACpC;EAAC;qBA5DQZ,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAoB,SAAVpB,UAAU;IAAAqB,YAFP;EAAM","names":["Gatekeeper","AppService","constructor","router","toastr","http","loginByAuth","email","password","token","localStorage","setItem","getProfile","navigate","success","error","message","registerByAuth","user","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\services\\app.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppService {\n    public user: any = null;\n    private baseUrl = 'https://reqres.in/api/login';\n\n    constructor(private router: Router, private toastr: ToastrService, private http: HttpClient) {}\n\n    async loginByAuth({email, password}) {\n        try {\n            const token = await Gatekeeper.loginByAuth(email, password);\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Login success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    // async loginByAuth({email, password}){\n    //     alert(\"email: \"+ email)\n    //     // eve.holt@reqres.in\n    //     // cityslicka\n    //     try{\n    //         const response = await this.http.post(`${this.baseUrl}`, { email, password }).toPromise();\n    //         const token = response['token'];\n    //         localStorage.setItem('token', token);\n    //         localStorage.setItem('gatekeeper_token', token);\n    //         this.router.navigate(['/']);\n    //         this.toastr.success('Login success');\n    //     }catch (error) {\n    //         this.toastr.error(error.message);\n    //     }\n    // }\n\n    async registerByAuth({email, password}) {\n        try {\n            const token = await Gatekeeper.registerByAuth(email, password);\n            localStorage.setItem('token', token);\n            await this.getProfile();\n            this.router.navigate(['/']);\n            this.toastr.success('Register success');\n        } catch (error) {\n            this.toastr.error(error.message);\n        }\n    }\n\n    async getProfile() {\n        try {\n            this.user = await Gatekeeper.getProfile();\n        } catch (error) {\n            this.logout();\n            throw error;\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('gatekeeper_token');\n        this.user = null;\n        this.router.navigate(['/login']);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}