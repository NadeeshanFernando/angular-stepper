{"ast":null,"code":"import _asyncToGenerator from \"F:/Projects/Project Square/Template/project_square/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@services/app.service\";\nexport class AuthGuard {\n  constructor(router, appService) {\n    this.router = router;\n    this.appService = appService;\n  }\n  canActivate(next, state) {\n    return t;\n  }\n  canActivateChild(next, state) {\n    return this.canActivate(next, state);\n  }\n  getProfile() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.appService.user) {\n        return true;\n      }\n      try {\n        yield _this.appService.getProfile();\n        return true;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AppService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AACA,SAGIA,sBAAsB,EACtBC,mBAAmB,EACnBC,OAAO,EACPC,MAAM,QACH,iBAAiB;;;;AAOxB,OAAM,MAAOC,SAAS;EAClBC,YAAoBC,MAAc,EAAUC,UAAsB;IAA9C,WAAM,GAAND,MAAM;IAAkB,eAAU,GAAVC,UAAU;EAAe;EAErEC,WAAW,CACPC,IAA4B,EAC5BC,KAA0B;IAM1B,OAAOC,CAAC;EACZ;EAEAC,gBAAgB,CACZH,IAA4B,EAC5BC,KAA0B;IAM1B,OAAO,IAAI,CAACF,WAAW,CAACC,IAAI,EAAEC,KAAK,CAAC;EACxC;EAEMG,UAAU;IAAA;IAAA;MACZ,IAAI,KAAI,CAACN,UAAU,CAACO,IAAI,EAAE;QACtB,OAAO,IAAI;;MAGf,IAAI;QACA,MAAM,KAAI,CAACP,UAAU,CAACM,UAAU,EAAE;QAClC,OAAO,IAAI;OACd,CAAC,OAAOE,KAAK,EAAE;QACZ,OAAO,KAAK;;IACf;EACL;EAAC;qBApCQX,SAAS;EAAA;EAAA;WAATA,SAAS;IAAAY,SAATZ,SAAS;IAAAa,YAFN;EAAM","names":["ActivatedRouteSnapshot","RouterStateSnapshot","UrlTree","Router","AuthGuard","constructor","router","appService","canActivate","next","state","t","canActivateChild","getProfile","user","error","factory","providedIn"],"sourceRoot":"","sources":["F:\\Projects\\Project Square\\Template\\project_square\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {\n    CanActivate,\n    CanActivateChild,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router\n} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AppService} from '@services/app.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n    constructor(private router: Router, private appService: AppService) {}\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ):\n        | Observable<boolean | UrlTree>\n        | Promise<boolean | UrlTree>\n        | boolean\n        | UrlTree {\n        return t;\n    }\n\n    canActivateChild(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ):\n        | Observable<boolean | UrlTree>\n        | Promise<boolean | UrlTree>\n        | boolean\n        | UrlTree {\n        return this.canActivate(next, state);\n    }\n\n    async getProfile() {\n        if (this.appService.user) {\n            return true;\n        }\n\n        try {\n            await this.appService.getProfile();\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}